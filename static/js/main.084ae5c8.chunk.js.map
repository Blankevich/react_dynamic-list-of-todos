{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","classNames","id","completed","title","onClick","type","TodoFilter","setAll","query","setQuery","setTodo","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","status","setStatus","isLoaded","setIsLoaded","isVisible","filter","isMatched","toLowerCase","includes","tod","ReactDOM","render","document","getElementById"],"mappings":"oPAWaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,aAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,mBAAGA,UAAU,mBAEf,uCACA,wCAGJ,gCACGH,EAAMI,KAAI,SAACC,GAAD,OACT,qBACE,UAAQ,OAERF,UAAWG,IAAW,CACpB,6BAAyC,OAAZJ,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOF,EAAKE,KAJ3D,UAOE,oBAAIJ,UAAU,eAAd,SAA8BE,EAAKE,KACnC,oBAAIJ,UAAU,eAAd,SACGE,EAAKG,UACJ,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,mBAEb,OAEN,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWG,IAAW,CACpB,mBAAoBD,EAAKG,UACzB,mBAAoBH,EAAKG,YAH7B,SAMGH,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACEO,QAAS,kBAAMT,EAAgBI,IAC/B,UAAQ,eACRF,UAAU,SACVQ,KAAK,SAJP,SAME,sBAAMR,UAAU,OAAhB,SACE,mBACEA,UAAWG,IACT,MACA,CAAE,gBAA4B,OAAZJ,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOF,EAAKE,IAC5C,CAAE,UAAsB,OAAZL,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOF,EAAKE,eAnC3CF,EAAKE,aCzBTK,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,OACAC,EAFyC,EAEzCA,MACAC,EAHyC,EAGzCA,SACAC,EAJyC,EAIzCA,QAJyC,OAOzC,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOD,EACPE,SAAU,SAACC,GACTN,EAAOM,EAAMC,OAAOH,QAJxB,UAOE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGd,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRQ,KAAK,OACLR,UAAU,QACVkB,YAAY,YACZJ,MAAOH,EACPI,SAAU,SAACC,GACTJ,EAASI,EAAMC,OAAOH,UAG1B,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdW,GACC,sBAAMX,UAAU,gBAAgBmB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRZ,KAAK,SACLR,UAAU,SACVO,QAAS,WACPK,EAAS,gBCnDVS,G,MAAmB,kBAC9B,qBAAKrB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASsB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICVMC,EAA6B,SAAC,GAEpC,IADL/B,EACI,EADJA,KAAMJ,EACF,EADEA,gBAEN,EAAwBoC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,qBAAU,WDOW,IAACC,KCNZpC,EAAKoC,ODM0BhB,EAAG,iBAAiBgB,KCNtCT,KAAKO,KACzB,IAGD,sBAAKpC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbmC,EAGA,sBAAKnC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,sBACEA,UAAU,0CACV,UAAQ,eAFV,mBAKIE,EAAKE,MAIT,wBACEI,KAAK,SACLR,UAAU,SACV,UAAQ,cACRO,QAAS,WACPT,EAAgB,YAMtB,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGE,EAAKI,QAGR,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAEGE,EAAKG,UACF,wBAAQL,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAGuC,KAAI,iBAAYJ,EAAKK,OAAxB,SACGL,EAAKM,gBAtCd,cAAC,EAAD,QCdKC,EAAgB,WAC3B,MAA0BR,mBAAiB,IAA3C,mBAAOrC,EAAP,KAAc8C,EAAd,KACA,EAA0BT,mBAAS,IAAnC,mBAAOvB,EAAP,KAAcC,EAAd,KACA,EAA4BsB,mBAAS,OAArC,mBAAOU,EAAP,KAAeC,EAAf,KACA,EAAwCX,mBAAsB,MAA9D,mBAAOnC,EAAP,KAAqBD,EAArB,KACA,EAAgCoC,oBAAS,GAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KAEMC,EAAYnD,EAAMoD,QAAO,SAAA/C,GAC7B,IAAMgD,EAAYhD,EAAKI,MAAM6C,cAAcC,SAASzC,EAAMwC,eAE1D,MAAe,WAAXP,EACKM,IAAgC,IAAnBhD,EAAKG,UAGZ,cAAXuC,EACKM,IAAgC,IAAnBhD,EAAKG,UAGpB6C,KAUT,OAPAb,qBAAU,WFXkBf,EAAY,UEY3BO,MAAK,SAAAwB,GACdV,EAASU,GACTN,GAAY,QAEb,IAGD,qCACE,qBAAK/C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEW,MAAOA,EACPC,SAAUA,EACVF,OAAQmC,EACRhC,QAAS+B,MAIb,qBAAK5C,UAAU,QAAf,SAEG8C,EAEG,cAAC,EAAD,CACEjD,MAAOmD,EACPlD,gBAAiBA,EACjBC,aAAcA,IAGhB,cAAC,EAAD,aAOXA,GACC,cAAC,EAAD,CACEG,KAAMH,EACND,gBAAiBA,QCxE3BwD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.084ae5c8.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  setSelectedTodo(todo: Todo): void,\n  selectedTodo: Todo | null,\n\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <i className=\"fas fa-check\" />\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={classNames({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed ? (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              ) : null}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                onClick={() => setSelectedTodo(todo)}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames(\n                      'far',\n                      { 'fa-eye-slash': selectedTodo?.id === todo.id },\n                      { 'fa-eye': selectedTodo?.id !== todo.id },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setQuery: (query: string) => void,\n  setAll: (query: string) => void,\n  setTodo: string\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setAll,\n  query,\n  setQuery,\n  setTodo,\n}) => (\n\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={setTodo}\n          onChange={(event) => {\n            setAll(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              setQuery('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  setSelectedTodo: (value: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              { todo.id }\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n              }}\n\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const isVisible = todos.filter(todo => {\n    const isMatched = todo.title.toLowerCase().includes(query.toLowerCase());\n\n    if (status === 'active') {\n      return isMatched && todo.completed === false;\n    }\n\n    if (status === 'completed') {\n      return isMatched && todo.completed === true;\n    }\n\n    return isMatched;\n  });\n\n  useEffect(() => {\n    getTodos().then(tod => {\n      setTodos(tod);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setAll={setStatus}\n                setTodo={status}\n              />\n            </div>\n\n            <div className=\"block\">\n\n              {isLoaded\n                ? (\n                  <TodoList\n                    todos={isVisible}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      ) }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}